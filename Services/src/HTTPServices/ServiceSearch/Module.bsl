
Функция SearchPOST(Запрос)
	
	Ответ = Новый HTTPСервисОтвет(200);
	Отказ = Ложь;
	ЗаписьXML = С_ИТССервисыСлужебныеПроцедурыФункции.ПолучитьЗаписьXML();
	ОписаниеОшибки = "";
	СтруктураПараметров = Неопределено;
	С_ИТССервисыСлужебныеПроцедурыФункции.ОбработатьВхПараметры(Запрос, ЗаписьXML, СтруктураПараметров, Отказ);
    ТелоЗапроса = Запрос.ПолучитьТелоКакСтроку(Кодировкатекста.UTF8);
    СтруктураПараметров.Вставить("ТелоЗапроса",ТелоЗапроса);
	Если  Отказ Тогда
		С_ИТССервисыСлужебныеПроцедурыФункции.ДополнитьОписаниеОшибки(ЗаписьXML, "140", "Ошибка поиска сервиса", "Неверно установлены параметры");
		С_ИТССервисыСлужебныеПроцедурыФункции.ДобавитьЭлементXML(ЗаписьXML, "Idrequest", СтруктураПараметров.IDREQUEST);
		ЗаписьXML.ЗаписатьНачалоЭлемента("Service");
		ЗаписьXML.ЗаписатьКонецЭлемента();
   Иначе		
		С_ИТССервисыСлужебныеПроцедурыФункции.ДобавитьЭлементXML(ЗаписьXML, "Idrequest", СтруктураПараметров.IDREQUEST);
		ЗаписьXML.ЗаписатьНачалоЭлемента("Service");
		РезультатПоиска = С_ИТСМеждународныйСервер.НайтиСервис(СтруктураПараметров);
		
		Если РезультатПоиска = Неопределено ИЛИ РезультатПоиска.Пустой() Тогда
			Отказ = Истина;				
			ТекстПодставновки = "Не найден сервис по заданным параметрам";				
			ОписаниеОшибки = ?(ОписаниеОшибки = "", текстПодставновки, СокрЛП(ОписаниеОшибки) + Символы.ВК + ТекстПодставновки);
		Иначе
			ВыборкаДетальныеЗаписи = РезультатПоиска.выбрать();
			Пока ВыборкаДетальныеЗаписи.Следующий() Цикл				
				ЗаписьXML.ЗаписатьНачалоЭлемента("Items");
					ЗаписьXML.ЗаписатьАтрибут("Idservice",Строка(ВыборкаДетальныеЗаписи.idservice));
					ЗаписьXML.ЗаписатьАтрибут("Status",Строка(ВыборкаДетальныеЗаписи.STATUS));
					ЗаписьXML.ЗаписатьАтрибут("Datebegin",Формат(ВыборкаДетальныеЗаписи.datebegin, "ДФ=yyyyMMdd"));
					ЗаписьXML.ЗаписатьАтрибут("Dateend",Формат(ВыборкаДетальныеЗаписи.dateend, "ДФ=yyyyMMdd"));
					ЗаписьXML.ЗаписатьАтрибут("Idcustomer",Строка(ВыборкаДетальныеЗаписи.idcustomer));
					ЗаписьXML.ЗаписатьАтрибут("Iddocrequest",Строка(ВыборкаДетальныеЗаписи.iddocrequest));
					ЗаписьXML.ЗаписатьАтрибут("Idrequest",Строка(ВыборкаДетальныеЗаписи.idrequest));
					ЗаписьXML.ЗаписатьАтрибут("Idserviceva",Строка(ВыборкаДетальныеЗаписи.IDSERVICEVA));
					ЗаписьXML.ЗаписатьАтрибут("Unp",Строка(ВыборкаДетальныеЗаписи.inn));
					ЗаписьXML.ЗаписатьАтрибут("Namecustomer",Строка(ВыборкаДетальныеЗаписи.namecustomer));
					ЗаписьXML.ЗаписатьАтрибут("Partnercode",Строка(ВыборкаДетальныеЗаписи.partnercode));
					ЗаписьXML.ЗаписатьАтрибут("Regnumbers",Строка(ВыборкаДетальныеЗаписи.regnumbers));
					
					Если СтруктураПараметров.INN.Количество() >0 Тогда
						Позиция =  СтруктураПараметров.INN.Найти(Строка(ВыборкаДетальныеЗаписи.inn));
						Если Позиция <> Неопределено Тогда
							СтруктураПараметров.INN.Удалить(Позиция);
						КонецЕсли;	
					КонецЕсли;	
					
					Если СтруктураПараметров.Idservice.Количество() >0 Тогда
						Позиция =  СтруктураПараметров.Idservice.Найти(Строка(ВыборкаДетальныеЗаписи.Idservice));
						Если Позиция <> Неопределено Тогда
							СтруктураПараметров.Idservice.Удалить(Позиция);
						КонецЕсли;	
					КонецЕсли;	
					
				ЗаписьXML.ЗаписатьКонецЭлемента();	
			КонецЦикла;
			
			Если СтруктураПараметров.INN.Количество() > 0 Тогда
				 Для каждого элт из СтруктураПараметров.INN Цикл
				 	ТекстПодставновки = "Отсутствует сервис для рег. номера """ + ВыборкаДетальныеЗаписи.regnumbers + """ и УНП """ + элт + """";				
				 	ОписаниеОшибки = ?(ОписаниеОшибки = "", текстПодставновки, СокрЛП(ОписаниеОшибки) + Символы.ВК + ТекстПодставновки);
				КонецЦикла;	
				Отказ = Истина;
			ИначеЕсли  СтруктураПараметров.Idservice.Количество() > 0 Тогда
				 Для каждого элт из СтруктураПараметров.Idservice Цикл
				 	ТекстПодставновки = "Отсутствует сервис для УИД """ + элт + """";				
				 	ОписаниеОшибки = ?(ОписаниеОшибки = "", текстПодставновки, СокрЛП(ОписаниеОшибки) + Символы.ВК + ТекстПодставновки);
				КонецЦикла;	
				Отказ = Истина
			КонецЕсли;	

		КонецЕсли;
		
		ЗаписьXML.ЗаписатьКонецЭлемента(); // сервис
		Если Отказ Тогда
			С_ИТССервисыСлужебныеПроцедурыФункции.ДополнитьОписаниеОшибки(ЗаписьXML, "140", "Ошибка поиска сервиса",  ОписаниеОшибки);
		Иначе
			ЗаписьXML.ЗаписатьНачалоЭлемента("Error");
			ЗаписьXML.ЗаписатьКонецЭлемента();		
		КонецЕсли;	
	
	КонецЕсли;			
	
	ЗаписьXML.ЗаписатьКонецЭлемента();  //result
	СтрокаДляОтвета = ЗаписьXML.Закрыть();		
	Ответ.Заголовки["Content-Type"] =  "text/xml;charset=UTF-8";
	С_ИТССервисыСлужебныеПроцедурыФункции.ОтослатьПисьмо("SearchPOST", ТелоЗапроса, СтрокаДляОтвета, "Результат");
	Ответ.УстановитьТелоИзСтроки(СтрокаДляОтвета, КодировкаТекста.UTF8,ИспользованиеByteOrderMark.НеИспользовать);
	Возврат Ответ;
		
КонецФункции
