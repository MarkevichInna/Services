
Функция DeactivationPOST(Запрос)
	
	Ответ = Новый HTTPСервисОтвет(200);
	Отказ = Ложь;
	ЗаписьXML = С_ИТССервисыСлужебныеПроцедурыФункции.ПолучитьЗаписьXML();
	ОписаниеОшибки = "";
	СтруктураПараметров = Неопределено;
	С_ИТССервисыСлужебныеПроцедурыФункции.ОбработатьВхПараметры(Запрос, ЗаписьXML, СтруктураПараметров, Отказ);
	ТелоЗапроса = Запрос.ПолучитьТелоКакСтроку(Кодировкатекста.UTF8);
    СтруктураПараметров.Вставить("ТелоЗапроса",ТелоЗапроса);	
	Если  Отказ Тогда
		С_ИТССервисыСлужебныеПроцедурыФункции.ДополнитьОписаниеОшибки(ЗаписьXML, "120", "Ошибка деактивации сервиса", "Неверно установлены параметры");
		С_ИТССервисыСлужебныеПроцедурыФункции.ДобавитьЭлементXML(ЗаписьXML, "Idrequest", СтруктураПараметров.IDREQUEST);
		ЗаписьXML.ЗаписатьНачалоЭлемента("Service");
		ЗаписьXML.ЗаписатьКонецЭлемента();
   Иначе		
		С_ИТССервисыСлужебныеПроцедурыФункции.ДобавитьЭлементXML(ЗаписьXML, "Idrequest", СтруктураПараметров.IDREQUEST);
		ЗаписьXML.ЗаписатьНачалоЭлемента("Service");
		РезультатПоиска = С_ИТСМеждународныйСервер.НайтиСервис(СтруктураПараметров);
		Если РезультатПоиска = Неопределено ИЛИ РезультатПоиска.Пустой() Тогда
			Отказ = Истина;				
			ТекстПодставновки = "Не найден сервис по заданным параметрам";				
			ОписаниеОшибки = ?(ОписаниеОшибки = "", текстПодставновки, СокрЛП(ОписаниеОшибки) + Символы.ВК + ТекстПодставновки);
		Иначе
			ВыборкаДетальныеЗаписи = РезультатПоиска.выбрать();
			Пока ВыборкаДетальныеЗаписи.Следующий() Цикл	
				НаборДанных = РегистрыСведений.С_РегистрацияСервисов.СоздатьНаборЗаписей();
				НаборДанных.Отбор.ПользовательСервиса.Установить(ВыборкаДетальныеЗаписи.ПользовательСервиса);
				НаборДанных.Отбор.IDDOCREQUEST.Установить(ВыборкаДетальныеЗаписи.IDDOCREQUEST);
				НаборДанных.Отбор.IDSERVICEVA.Установить(ВыборкаДетальныеЗаписи.IDSERVICEVA);
				//НаборДанных.Отбор.Партнер.Установить(ВыборкаДетальныеЗаписи.Партнер);
				НаборДанных.Отбор.Сервис.Установить(ВыборкаДетальныеЗаписи.Сервис);
				Попытка
					НаборДанных.Прочитать();
					НаборДанных[0].Включен = ложь;
					НаборДанных[0].Status = перечисления.СтатусыСервисовИТС.Деактивирован;
					НаборДанных.Записать();
					ЗаписьXML.ЗаписатьНачалоЭлемента("Items");
						ЗаписьXML.ЗаписатьАтрибут("Idservice",Строка(ВыборкаДетальныеЗаписи.idservice));
						ЗаписьXML.ЗаписатьАтрибут("Status",Строка(перечисления.СтатусыСервисовИТС.Деактивирован));
						ЗаписьXML.ЗаписатьАтрибут("Unp",Строка(ВыборкаДетальныеЗаписи.inn));
						ЗаписьXML.ЗаписатьАтрибут("Regnumbers",Строка(ВыборкаДетальныеЗаписи.regnumbers));
						ЗаписьXML.ЗаписатьАтрибут("Idserviceva",Строка(ВыборкаДетальныеЗаписи.IDSERVICEVA));
						
						Если СтруктураПараметров.INN.Количество() >0 Тогда
							Позиция =  СтруктураПараметров.INN.Найти(Строка(ВыборкаДетальныеЗаписи.inn));
							Если Позиция <> Неопределено Тогда
								СтруктураПараметров.INN.Удалить(Позиция);
							КонецЕсли;	
						КонецЕсли;	
						
						Если СтруктураПараметров.Idservice.Количество() >0 Тогда
							Позиция =  СтруктураПараметров.Idservice.Найти(Строка(ВыборкаДетальныеЗаписи.Idservice));
							Если Позиция <> Неопределено Тогда
								СтруктураПараметров.Idservice.Удалить(Позиция);
							КонецЕсли;	
						КонецЕсли;	

					ЗаписьXML.ЗаписатьКонецЭлемента();
				Исключение
					С_ИТССервисыСлужебныеПроцедурыФункции.ДополнитьОписаниеОшибки(ЗаписьXML, "120", "Ошибка деактивации сервиса",  ОписаниеОшибки);
					//ИТССервисыСлужебныеПроцедурыФункции.ОтослатьПисьмо("DeactivationPOST", ТелоЗапроса, ОписаниеОшибки());
				КонецПопытки;	
			КонецЦикла;
			
			Если СтруктураПараметров.INN.Количество() > 0 Тогда
				 Для каждого элт из СтруктураПараметров.INN Цикл
				 	ТекстПодставновки = "Отсутствует сервис для рег. номера """ + ВыборкаДетальныеЗаписи.regnumbers + """ и УНП """ + элт + """";				
				 	ОписаниеОшибки = ?(ОписаниеОшибки = "", текстПодставновки, СокрЛП(ОписаниеОшибки) + Символы.ВК + ТекстПодставновки);
				КонецЦикла;	
				Отказ = Истина;
			ИначеЕсли  СтруктураПараметров.Idservice.Количество() > 0 Тогда
				 Для каждого элт из СтруктураПараметров.Idservice Цикл
				 	ТекстПодставновки = "Отсутствует сервис для УИД """ + элт + """";				
				 	ОписаниеОшибки = ?(ОписаниеОшибки = "", текстПодставновки, СокрЛП(ОписаниеОшибки) + Символы.ВК + ТекстПодставновки);
				КонецЦикла;	
				Отказ = Истина
			КонецЕсли;	
		КонецЕсли;
		
		ЗаписьXML.ЗаписатьКонецЭлемента(); // сервис
		Если Отказ Тогда
			С_ИТССервисыСлужебныеПроцедурыФункции.ДополнитьОписаниеОшибки(ЗаписьXML, "120", "Ошибка деактивации сервиса",  ОписаниеОшибки);
		Иначе
			ЗаписьXML.ЗаписатьНачалоЭлемента("Error");
			ЗаписьXML.ЗаписатьКонецЭлемента();		
		КонецЕсли;	
	КонецЕсли;			
	
	ЗаписьXML.ЗаписатьКонецЭлемента();  //result
	СтрокаДляОтвета = ЗаписьXML.Закрыть();		
	Ответ.Заголовки["Content-Type"] =  "text/xml;charset=UTF-8";
	С_ИТССервисыСлужебныеПроцедурыФункции.ОтослатьПисьмо("DectivationPOST", ТелоЗапроса, СтрокаДляОтвета, "Результат");
	
	Ответ.УстановитьТелоИзСтроки(СтрокаДляОтвета, КодировкаТекста.UTF8,ИспользованиеByteOrderMark.НеИспользовать);
	Возврат Ответ;
	
КонецФункции

