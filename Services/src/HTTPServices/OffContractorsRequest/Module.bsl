
Функция POSTRequest(Запрос)
	
	Отказ = Ложь;
	КодОшибки = "";
	Ответ = Новый HTTPСервисОтвет(200);	
	
	СтруктураПараметров = С_СлужебныеПроцедурыФункцииСервер.РазобратьВходныеданные(Запрос);
	С_РаботаССервисамиСлужебный.ПроверитьОбщийДоступКСервисам(СтруктураПараметров,  Ответ, КодОшибки, Отказ);

	Если Отказ Тогда
		Возврат Ответ
	КонецЕсли;
						
	ДвоичныеДанные = ПолучитьДанныеСервисов(СтруктураПараметров, КодОшибки, Отказ);
	
	Если Отказ Тогда
		С_СлужебныеПроцедурыФункцииСервер.УстановитьКодОшибки(Ответ, КодОшибки);
		Возврат Ответ; 
	КонецЕсли;	

	Ответ.УстановитьТелоИзДвоичныхДанных(ДвоичныеДанные);						
	Возврат Ответ;	

КонецФункции

Функция ПолучитьДанныеСервисов(СтруктураПараметров, КодОшибки, Отказ)
	
	КодОшибкиОбщий = "";
	ЗаписьТекст = "";
	ДвоичныеДанные = Неопределено;
	
	//контрагенты
	Если Найти(СтруктураПараметров.ID_METHOD,    "OffContractors")  <> 0 
		ИЛИ Найти(СтруктураПараметров.ID_METHOD, "Rep_Contractors") <> 0
		ИЛИ Найти(СтруктураПараметров.ID_METHOD, "Rep_EGR")         <> 0 Тогда
		
		С_РаботаССервисамиСлужебный.ЗарегистрироватьИспользованиеСервиса(СтруктураПараметров, Справочники.С_Сервисы.OffContractors, КодОшибки, Отказ);
		Если Отказ Тогда
			С_СлужебныеПроцедурыФункцииСервер.ДополнитьОбщийКодОшибки(КодОшибкиОбщий, КодОшибки);
		Иначе
			МассивУНП = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(СтруктураПараметров.ID_CONTR_UNP, ";", Истина);
			
			Если Найти(СтруктураПараметров.ID_METHOD,"OffContractors") <> 0	Тогда
				С_КонтрагентыСервер.ПроверитьКонтрагентовВРеестреПравонарушений(ЗаписьТекст, МассивУНП, КодОшибки, Отказ, Истина);
				Если Отказ Тогда
					С_СлужебныеПроцедурыФункцииСервер.ДополнитьОбщийКодОшибки(КодОшибкиОбщий, КодОшибки);
				КонецЕсли;	
				С_КонтрагентыСервер.ПолучитьКонтрагентовВВЕГР(ЗаписьТекст, МассивУНП, КодОшибки, Отказ, Истина);	
				Если  Отказ Тогда
					С_СлужебныеПроцедурыФункцииСервер.ДополнитьОбщийКодОшибки(КодОшибкиОбщий, КодОшибки);
				КонецЕсли;			
			ИначеЕсли Найти(СтруктураПараметров.ID_METHOD,"Rep_EGR") <> 0 Тогда
				С_КонтрагентыСервер.ПолучитьКонтрагентовВВЕГР(ЗаписьТекст,  МассивУНП, КодОшибки, Отказ);
				Если  Отказ Тогда
					С_СлужебныеПроцедурыФункцииСервер.ДополнитьОбщийКодОшибки(КодОшибкиОбщий, КодОшибки);
				КонецЕсли;			 
			ИначеЕсли   Найти(СтруктураПараметров.ID_METHOD,"Rep_Contractors") <> 0 Тогда
				С_КонтрагентыСервер.ПроверитьКонтрагентовВРеестреПравонарушений(ЗаписьТекст, МассивУНП, КодОшибки, Отказ);
				Если  Отказ Тогда
					С_СлужебныеПроцедурыФункцииСервер.ДополнитьОбщийКодОшибки(КодОшибкиОбщий, КодОшибки);
				КонецЕсли;			
			КонецЕсли;	
		КонецЕсли;	
	КонецЕсли;		

	//банкроты	
	Отказ = Ложь;
	КодОшибки = "";
	Если  Найти(СтруктураПараметров.ID_METHOD, "Bankrupt" ) <> 0 Тогда	
		С_РаботаССервисамиСлужебный.ЗарегистрироватьИспользованиеСервиса(СтруктураПараметров, Справочники.С_Сервисы.Bankrupt, КодОшибки, Отказ);
		Если Отказ Тогда
			С_РаботаССервисамиСлужебный.ДополнитьОбщийКодОшибки(КодОшибкиОбщий, КодОшибки);
		Иначе
			С_КонтрагентыСервер.ПолучитьБанкротов(СтруктураПараметров, ЗаписьТекст, КодОшибки, Отказ);
			Если  Отказ Тогда
				С_РаботаССервисамиСлужебный.ДополнитьОбщийКодОшибки(КодОшибкиОбщий, КодОшибки);
			КонецЕсли;			
		КонецЕсли;
	КонецЕсли;
		
	Попытка
		ВременныйФайл = ПолучитьИмяВременногоФайла();
		Запись = Новый ЗаписьТекста();
		Запись.Открыть(ВременныйФайл);
		Запись.Записать(ЗаписьТекст);
		Запись.Закрыть();
		ДвоичныеДанные = Новый ДвоичныеДанные(ВременныйФайл);
		УдалитьФайлы(ВременныйФайл);	
	Исключение
		КодОшибки =  "OFF_CONTR_ERROR";
		Отказ = Истина;	
	КонецПопытки;	
	
	Возврат Двоичныеданные
КонецФункции	
