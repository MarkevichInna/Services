

Функция BlanksPOST(Запрос)
	
	КодОшибки = "";
	Отказ = Ложь;
	
	Ответ = Новый HTTPСервисОтвет(200);	
	
	СтруктураПараметров = С_СлужебныеПроцедурыФункцииСервер.РазобратьВходныеданные(Запрос);
	С_РаботаССервисамиСлужебный.ПроверитьОбщийДоступКСервисам(СтруктураПараметров, Ответ, КодОшибки, Отказ);

	Если Отказ Тогда
		Возврат Ответ
	КонецЕсли;
	
	С_РаботаССервисамиСлужебный.ЗарегистрироватьИспользованиеСервиса(СтруктураПараметров, Справочники.С_Сервисы.BanksClassifier, КодОшибки, Отказ);
	
	Если Отказ Тогда
		С_СлужебныеПроцедурыФункцииСервер.УстановитьКодОшибки(Ответ, КодОшибки);
		Возврат Ответ
	КонецЕсли;
																							
	ДвоичныеДанные = ПолучитьДанныеСервиса(СтруктураПараметров, КодОшибки, Отказ);
	
	Если Отказ Тогда
		С_СлужебныеПроцедурыФункцииСервер.УстановитьКодОшибки(Ответ, КодОшибки);
		Возврат Ответ; 
	КонецЕсли;	

	Ответ.УстановитьТелоИзДвоичныхДанных(ДвоичныеДанные);	
	Возврат Ответ;
			
КонецФункции


Функция ПолучитьДанныеСервиса(СтруктураПараметров, КодОшибки, Отказ)

	ID_pSB = "";
	ID_pNB = "";
	ID_PTB = "";
	ДвоичныеДанные = Неопределено;
	
	Если  СтруктураПараметров.Свойство("ID_PSB") Тогда
		ID_pSB = СтруктураПараметров.ID_PSB;
	КонецЕсли;	
	
	Если  СтруктураПараметров.Свойство("ID_PNB") Тогда
		ID_PNB = СтруктураПараметров.ID_PNB;
	КонецЕсли;
	
	Если  СтруктураПараметров.Свойство("ID_PTB") Тогда
		ID_PTB = СтруктураПараметров.ID_PTB;
	КонецЕсли;	
							
	Прокси = WSСсылки.WSBlanks.СоздатьWSПрокси("http://www.bisc.by/webservices", "FindBlankWSSoap","BasicHttpBinding_FindBlankWSSoap");

	Если  ID_PTB <> "" Тогда
		Текст = "";		
		Попытка			
			Результат = Прокси.FindBlankWS(ID_PTB, false,  ID_pSB, ID_pNB);	
		Исключение
			КодОшибки = "BLANK_NOT_FOUND";
			Отказ = Истина;
			Возврат Неопределено; 
		КонецПопытки;
		
		Если Результат.isFound = Неопределено Тогда
			КодОшибки = "BLANK_NOT_FOUND";
			Отказ = Истина;
			Возврат Неопределено;
		КонецЕсли;
		
		WSRel  = Результат.Rel.WSRel;	
		ДатаПосл = Дата(1,1,1);		
		стрПослРеализ = Неопределено;
		Для каждого  текСтрока ИЗ  WSRel Цикл
			ДатаСтр = текСтрока.Date;
			Дата = Дата(Прав(ДатаСтр, 4) + Сред(ДатаСтр, 4, 2) + Лев(ДатаСтр,2));
			Если Дата > ДатаПосл Тогда
				стрПослРеализ = текСтрока;
			КонецЕсли;	
		КонецЦикла;
		
		WSSp  = Результат.Sp.WSSp;
		ДатаНедейств = Дата(1,1,1);
		Для каждого  текСтрока ИЗ  WSSp Цикл
			ДатаСтр = текСтрока.Date;
			Дата = Дата(Прав(ДатаСтр, 4) + Сред(ДатаСтр, 4, 2) + Лев(ДатаСтр,2));
			Если Дата > ДатаНедейств Тогда
				ДатаНедейств = Дата;
			КонецЕсли;	
		КонецЦикла;
		
		ДатаПередачи = Дата(1,1,1);
		Для каждого  текСтрока ИЗ  WSSp Цикл
			ДатаСтр = текСтрока.Date;
			Дата = Дата(Прав(ДатаСтр, 4) + Сред(ДатаСтр, 4, 2) + Лев(ДатаСтр,2));
			Если Дата > ДатаПередачи Тогда
				ДатаПередачи = Дата;
			КонецЕсли;	
		КонецЦикла;

		Если стрПослРеализ <>  Неопределено Тогда
			Текст = "ДатаРеализации=" + стрПослРеализ.Date  + ";UNP=" + стрПослРеализ.UNP + ";Name=" + стрПослРеализ.Name;
		Иначе
			КодОшибки =  "BLANK_NOT_FOUND";
			Отказ = Истина;
			Возврат Неопределено;
		КонецЕсли;
		
		Если   ЗначениеЗаполнено(ДатаНедейств) Тогда
			Текст = текст + Символы.ПС + "ДатаНедейств=" + ДатаНедейств;
		КонецЕсли;	
		
		Если   ЗначениеЗаполнено(ДатаПередачи) Тогда
			Текст = текст + Символы.ПС + "ДатаПередачи=" + ДатаПередачи;
		КонецЕсли;			
		
	КонецЕсли;
	Попытка
		ВременныйФайл = ПолучитьИмяВременногоФайла();
		Запись = Новый ЗаписьТекста(ВременныйФайл, КодировкаТекста.UTF8);
		Запись.Записать(Текст);
		Запись.Закрыть();
		ДвоичныеДанные = Новый ДвоичныеДанные(ВременныйФайл);
		УдалитьФайлы(ВременныйФайл);
	Исключение
		КодОшибки = "BLANK_NOT_FOUND";
		Отказ = Истина;
	КонецПопытки;
		
	Возврат Двоичныеданные
КонецФункции	
