
Функция РазобратьТелоЗапроса(ТелоЗапроса, ТелоЗапросаКEPASS = "") Экспорт
	
	КоличествоСтрок = СтрЧислоСтрок(ТелоЗапроса);
	ТекущаяСтрока = 1;
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("РабочаяДата", ТекущаяДатаСеанса());
	СтруктураПараметров.Вставить("ID_CONFIG_VER", "");	
	
	Пока ТекущаяСтрока <= КоличествоСтрок Цикл	
		Стр = СтрПолучитьСтроку(ТелоЗапроса, ТекущаяСтрока);
		
		Значение = "";
		Тег = "";
		РазобратьТеговуюСтроку(Стр, Тег, Значение);
		
		Если  ВРЕГ(Тег) =  "ID_PER"  Тогда
			СтруктураПараметров.Вставить("ID_PER", Значение);
			
		//общая инф.
		ИначеЕсли  ВРЕГ(Тег) =  "ID_METHOD"  Тогда
			СтруктураПараметров.Вставить("ID_METHOD", Значение);
		ИначеЕсли  ВРЕГ(Тег) =  "ID_METHODVER"  Тогда
			СтруктураПараметров.Вставить("ID_METHODVER", Значение);
		ИначеЕсли  ВРЕГ(Тег) =  "ID_ADDRESS"  Тогда
			СтруктураПараметров.Вставить("ID_ADDRESS", Значение);
		ИначеЕсли  ВРЕГ(Тег) =  "ID_SERVICE"  Тогда
			СтруктураПараметров.Вставить("ID_SERVICE", Значение);
		ИначеЕсли  ВРЕГ(Тег) =  "ID_COMPAT"  Тогда
			СтруктураПараметров.Вставить("ID_COMPAT", Значение);	
			
		ИначеЕсли  ВРЕГ(Тег) =  "ID_PSB"  Тогда
			СтруктураПараметров.Вставить("ID_PSB", Значение);
	
		ИначеЕсли  ВРЕГ(Тег) =  "ID_PNB"  Тогда
			СтруктураПараметров.Вставить("ID_PNB", Значение);
			
		ИначеЕсли  ВРЕГ(Тег) =  "ID_PTB"  Тогда
			СтруктураПараметров.Вставить("ID_PTB", Значение);
	
		ИначеЕсли  ВРЕГ(Тег) =  "ID_CONFIG_VER"  Тогда
			СтруктураПараметров.Вставить("ID_CONFIG_VER", Значение);
			
		ИначеЕсли  ВРЕГ(Тег) = "ID_ORG_NAME"  Тогда
			СтруктураПараметров.Вставить("ID_ORG_NAME", Значение);
			
		ИначеЕсли  ВРЕГ(Тег) =  "ID_ITS_REGNUM"  Тогда
			СтруктураПараметров.Вставить("ID_ITS_REGNUM", Значение);
			
		ИначеЕсли  ВРЕГ(Тег) =  "ID_CONFIG_REGNUM"  Тогда
			СтруктураПараметров.Вставить("ID_CONFIG_REGNUM", Значение);
	
		ИначеЕсли  ВРЕГ(Тег) =  "ID_ORG_UNP"  Тогда
			СтруктураПараметров.Вставить("ID_ORG_UNP", СтрЗаменить(СокрЛП(Значение), Символы.НПП, ""));
			
		//курсы валют	
		ИначеЕсли  ВРЕГ(Тег) =  "ID_CURR_LIST"  Тогда
			СтруктураПараметров.Вставить("ID_CURR_LIST", Значение);
			
		ИначеЕсли  ВРЕГ(Тег) =  "ID_CURR_DATES"  Тогда
			СтруктураПараметров.Вставить("ID_CURR_DATES", Значение);
			
		//контрагенты		
		ИначеЕсли  ВРЕГ(Тег) =  "ID_CONTR_UNP"  Тогда
			СтруктураПараметров.Вставить("ID_CONTR_UNP", Значение);
			
		//adr		
		ИначеЕсли  ВРЕГ(Тег) =  "ID_ADDRESS_LIST"  Тогда
			СтруктураПараметров.Вставить("ID_ADDRESS_LIST", Значение);
	
		ИначеЕсли  ВРЕГ(Тег) =  "ID_CONTR_UNP_BANK"  Тогда
			СтруктураПараметров.Вставить("ID_CONTR_UNP_BANK", Значение);
	
	    ИначеЕсли  ВРЕГ(Тег) =  "ID_CONTR_UNP_KONT"  Тогда
			СтруктураПараметров.Вставить("ID_CONTR_UNP_KONT", Значение);
			
		ИначеЕсли  ВРЕГ(Тег) =  "ID_CONTR_UNP_KONTI"  Тогда
			СтруктураПараметров.Вставить("ID_CONTR_UNP_KONTI", Значение);
			
		КонецЕсли;
		ТекущаяСтрока =  ТекущаяСтрока + 1;	
	КонецЦикла;
	
	Возврат СтруктураПараметров;	
КонецФункции	

Функция РазобратьТеговуюСтроку(СтрокаРазбора, Тег, Значение)
	
	ПозицияПрисваивания = Найти(СтрокаРазбора, "=");
	
	Если ПозицияПрисваивания = 0 Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Тег = ВРЕГ(СокрЛП(Лев(СтрокаРазбора, ПозицияПрисваивания - 1)));
	
	Значение = СокрЛП(Сред(СтрокаРазбора, ПозицияПрисваивания + 1));
	
	Возврат НЕ ПустаяСтрока(Тег);
	
КонецФункции

Функция РазобратьВходныеданные(Запрос) Экспорт
	ТелоЗапроса = Запрос.ПолучитьТелоКакСтроку(КодировкаТекста.UTF8);	
	Возврат РазобратьТелоЗапроса(ТелоЗапроса)	
КонецФункции
		
Процедура ДобавитьКодОшибкиВОтвет(Ответ, КодОшибки) Экспорт
	
	Ответ.Причина = КодОшибки;
	Ответ.Заголовки.Вставить("ERRORKOD", КодОшибки);
	
КонецПроцедуры

Процедура ДополнитьОбщийКодОшибки(КодОшибкиОбщий, КодОшибки) Экспорт
	
	Если НЕ КодОшибкиОбщий = "" Тогда
		КодОшибкиОбщий  = КодОшибкиОбщий + "/" + КодОшибки;
	КонецЕсли;
	
КонецПроцедуры
	
Процедура УстановитьКодОшибки(Ответ, КодОшибки) Экспорт
	
	Ответ.Причина = КодОшибки;
	Ответ.Заголовки.Вставить("ERRORKOD", КодОшибки);
	
КонецПроцедуры